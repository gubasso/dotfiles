#!/bin/bash
d=$(date +%Y-%m-%d)

if [[ ! -d "${HOME}/Temp/backup_stage" ]]
then
    mkdir -p "${HOME}/Temp/backup_stage"
fi

temp_dir="${HOME}/Temp"
stage_dir="${HOME}/Temp/backup_stage"

dropbox_dest_dir="${HOME}/Dropbox/00-backup"

# Work on git dirs
git_repos_projects=$(fd -H '.git$' '/home/gubasso/Projects' --type d)
git_dir_projects=$(echo "$git_repos_projects" | sed 's/\.git//g')
declare -a git_dir_arr=($git_dir_projects)
git_dir_arr+=("$HOME/.dotfiles")

# normal dirs, not git
declare -a dirs_to_cp=(
    "${HOME}/Downloads"
    "${HOME}/Study"
)


# Add the second array at the end of the first array [^2]
dir_arr=(${git_dir_arr[@]} ${dirs_to_cp[@]})

for dirloop in ${dir_arr[@]}
do
    printf "\n $dirloop \n\n"
    cd $dirloop

    # check if is git, add, commit and push
    if [[ -d .git ]]
    then
        git add . && git commit -m "auto backup"
        git push &> /dev/null
    fi

    printf "\n Copying to stage $stage_dir... \n\n"
    cp -fR $dirloop $stage_dir
done

printf "\n Creating tar and saving it at $dropbox_dest_dir \n\n"

my_tar_file="${temp_dir}/backup_${HOSTNAME}_${d}.tar.gz"
tar czpf ${my_tar_file} ${stage_dir}
gpg --recipient gubasso@cwnt.io --encrypt ${my_tar_file}

printf "\n Saving ${my_tar_file}.gpg at ${dropbox_dest_dir}\n"

mv ${my_tar_file}.gpg ${dropbox_dest_dir}

#copy keys.vs to dropbox
#cp -fR ${HOME}/.ssh/keys.vc ${dropbox_dest_dir}/keys_${d}.vc
tar czpf ${dropbox_dest_dir}/keepass_${d}.tar ${HOME}/Dropbox/Keepass

# clean stage
rm -rf ${temp_dir}/*

# # Docs
#
# Using tar and gpg to create a secured tar archive.[^1]
# ```
# tar czvpf - file1.txt file2.pdf file3.jpg | gpg --symmetric --cipher-algo aes256 -o myarchive.tar.gz.gpg
# ```
# After entering the above command you will be prompted for a passphrase.
#
# Animated gif showing how to create an encrypted and password protected tar archive.
# After entering the passphrase you will be asked to repeat it.  Then the archive will be created as an encrypted archive, using a secure algorithm and protected by your custom passphrase.
#
# ```
# gpg -d myarchive.tar.gz.gpg | tar xzvf -
# ```
#
# Extract, unzip and decrypt tar (recover backup)
# ```
# gpg --decrypt secret.gpg | tar xzpf -
# ```
#
# # References:
#
# [^1]: [How to Create an Encrypted (Password Protected) Tar or Zip Archive in Linux](https://www.putorius.net/how-to-create-enrcypted-password.html)
# [^2]: [Bash append to array](https://linuxhint.com/bash_append_array/)
