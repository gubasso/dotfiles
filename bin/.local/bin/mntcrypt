#!/usr/bin/env bash
set -euo pipefail

cleanup() {
  unset PASSWORD
}
trap cleanup EXIT

# Args
if [ "$#" -ne 3 ]; then
  notify-send -u normal -i help-about "gocryptfs Usage" \
    "Usage: $0 ENCRYPTED_DIR DECRYPTED_DIR GOPASS_ENTRY"
  exit 1
fi
ENCRYPTED_DIR="$1"; DECRYPTED_DIR="$2"; GOPASS_ENTRY="$3"

# Path checks
for dir in "$ENCRYPTED_DIR" "$DECRYPTED_DIR"; do
  [ -d "$dir" ] || {
    notify-send -u critical -i dialog-error "gocryptfs Error" \
      "$dir does not exist"
    exit 1
  }
done

# Already mounted?
if mountpoint -q "$DECRYPTED_DIR"; then
  notify-send -u low -i dialog-information "gocryptfs" \
    "$DECRYPTED_DIR is already mounted"
  exit 0
fi

# Fetch & validate password
PASSWORD=$(gopass -o "$GOPASS_ENTRY" 2>/dev/null || echo "")
if [ -z "$PASSWORD" ]; then
  notify-send -u critical -i dialog-error "gocryptfs Error" \
    "Failed to retrieve password from gopass: $GOPASS_ENTRY"
  exit 1
fi

# Mount
echo "$PASSWORD" | gocryptfs -o allow_other \
  "$ENCRYPTED_DIR" "$DECRYPTED_DIR"

notify-send -u normal -i gocryptfs "gocryptfs" \
  "Mounted $DECRYPTED_DIR"
